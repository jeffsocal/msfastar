[{"path":"https://jeffsocal.github.io/msfastar/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jeff Jones. Author, maintainer.","code":""},{"path":"https://jeffsocal.github.io/msfastar/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Jones J (2024). msfastar: light-weight FASTA reader parser. R package version 0.8.0.","code":"@Manual{,   title = {msfastar: A light-weight FASTA reader and parser},   author = {Jeff Jones},   year = {2024},   note = {R package version 0.8.0}, }"},{"path":"https://jeffsocal.github.io/msfastar/index.html","id":"msfastar-","dir":"","previous_headings":"","what":"A light-weight FASTA reader and parser","title":"A light-weight FASTA reader and parser","text":"lightweight R package parsing FASTA (like UniProt) files R usable list data.frame. main function utilizes regular expressions extract meta data along protein sequence. functions written Rust optimize performance.","code":""},{"path":"https://jeffsocal.github.io/msfastar/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A light-weight FASTA reader and parser","text":"install, open R type:","code":"install.packages(\"devtools\") devtools::install_github(\"jeffsocal/msfastar\")"},{"path":"https://jeffsocal.github.io/msfastar/index.html","id":"get-started","dir":"","previous_headings":"","what":"Get Started","title":"A light-weight FASTA reader and parser","text":"simple get started, just point read_fasta() function downloaded FASTA file save object. addition, expected peptides can generated digest() function. Alternatively read_fasta FASTA file data.frame.","code":"library(msfastar) path_to_fasta <- system.file(\"extdata\", \"albu_human.fasta\", package = \"msfastar\") fasta_data <- read_fasta(path_to_fasta)  #> ℹ Parsing FASTA file albu_human.fasta #> ✔ Parsing FASTA file albu_human.fasta ... done #>   fasta_data[[1]] #> $accession #> [1] \"P02768\" #>  #> $protein_name #> [1] \"ALBU_HUMAN\" #>  #> $gene_name #> [1] \"ALB\" #>  #> $organism #> [1] \"Homo sapiens\" #>  #> $description #> [1] \"Albumin\" #>  #> $sequence #> [1] \"MKWVTFISLLFLFSSAYSRGVFRRDAHKSEVAHRFKDLGEENFKALVLIAFAQYLQQCPFEDHVKLVNEVTEFAKTCVADESAENCDKSLHTLFGDKLCTVATLRETYGEMADCCAKQEPERNECFLQHKDDNPNLPRLVRPEVDVMCTAFHDNEETFLKKYLYEIARRHPYFYAPELLFFAKRYKAAFTECCQAADKAACLLPKLDELRDEGKASSAKQRLKCASLQKFGERAFKAWAVARLSQRFPKAEFAEVSKLVTDLTKVHTECCHGDLLECADDRADLAKYICENQDSISSKLKECCEKPLLEKSHCIAEVENDEMPADLPSLAADFVESKDVCKNYAEAKDVFLGMFLYEYARRHPDYSVVLLLRLAKTYETTLEKCCAAADPHECYAKVFDEFKPLVEEPQNLIKQNCELFEQLGEYKFQNALLVRYTKKVPQVSTPTLVEVSRNLGKVGSKCCKHPEAKRMPCAEDYLSVVLNQLCVLHEKTPVSDRVTKCCTESLVNRRPCFSALEVDETYVPKEFNAETFTFHADICTLSEKERQIKKQTALVELVKHKPKATKEQLKAVMDDFAAFVEKCCKADDKETCFAEEGKKLVAASQAALGL\" fasta_data <- lapply(fasta_data, digest)  fasta_data[[1]]  #> $accession #> [1] \"P02768\" #>  #> $protein_name #> [1] \"ALBU_HUMAN\" #>  #> $gene_name #> [1] \"ALB\" #>  #> $organism #> [1] \"Homo sapiens\" #>  #> $description #> [1] \"Albumin\" #>  #> $sequence #> [1] \"MKWVTFISLLFLFSSAYSRGVFRRDAHKSEVAHRFKDLGEENFKALVLIAFAQYLQQCPFEDHVKLVNEVTEFAKTCVADESAENCDKSLHTLFGDKLCTVATLRETYGEMADCCAKQEPERNECFLQHKDDNPNLPRLVRPEVDVMCTAFHDNEETFLKKYLYEIARRHPYFYAPELLFFAKRYKAAFTECCQAADKAACLLPKLDELRDEGKASSAKQRLKCASLQKFGERAFKAWAVARLSQRFPKAEFAEVSKLVTDLTKVHTECCHGDLLECADDRADLAKYICENQDSISSKLKECCEKPLLEKSHCIAEVENDEMPADLPSLAADFVESKDVCKNYAEAKDVFLGMFLYEYARRHPDYSVVLLLRLAKTYETTLEKCCAAADPHECYAKVFDEFKPLVEEPQNLIKQNCELFEQLGEYKFQNALLVRYTKKVPQVSTPTLVEVSRNLGKVGSKCCKHPEAKRMPCAEDYLSVVLNQLCVLHEKTPVSDRVTKCCTESLVNRRPCFSALEVDETYVPKEFNAETFTFHADICTLSEKERQIKKQTALVELVKHKPKATKEQLKAVMDDFAAFVEKCCKADDKETCFAEEGKKLVAASQAALGL\" #>  #> $peptideslibrary(tidyverse, warn.conflicts = FALSE) fasta_data <- read_fasta(path_to_fasta) |> as.data.frame() |> as_tibble()  #> ℹ Parsing FASTA file albu_human.fasta #> ✔ Parsing FASTA file albu_human.fasta ... done  fasta_data #> # A tibble: 3 × 6 #>   accession protein_name gene_name organism     description          sequence    #>   <chr>     <chr>        <chr>     <chr>        <chr>                <chr>       #> 1 P02768    ALBU_HUMAN   ALB       Homo sapiens Albumin              MKWVTFISLL… #> 2 P02768    ALBU_HUMAN   <NA>      Homo sapiens Isoform 2 of Albumin MKWVTFISLL… #> 3 P02768    ALBU_HUMAN   <NA>      Homo sapiens Isoform 3 of Albumin MKWVTFISLL…"},{"path":"https://jeffsocal.github.io/msfastar/reference/as.data.frame.msfastar.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for converting a msfastar object to a table — as.data.frame.msfastar","title":"Helper function for converting a msfastar object to a table — as.data.frame.msfastar","text":"Helper function converting msfastar object table","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/as.data.frame.msfastar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for converting a msfastar object to a table — as.data.frame.msfastar","text":"","code":"# S3 method for msfastar as.data.frame(x, row.names = TRUE, optional = NULL, .drop = NULL, ...)"},{"path":"https://jeffsocal.github.io/msfastar/reference/as.data.frame.msfastar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for converting a msfastar object to a table — as.data.frame.msfastar","text":"x rmfasta data object row.names Dead-end generic/method consistency optional Dead-end generic/method consistency .drop Call columns drop data.frame ... Unused generic/method consistency","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/as_database.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for converting a msfastar object to a table — as_database","title":"Helper function for converting a msfastar object to a table — as_database","text":"Helper function converting msfastar object table","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/as_database.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for converting a msfastar object to a table — as_database","text":"","code":"as_database(x)"},{"path":"https://jeffsocal.github.io/msfastar/reference/as_database.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for converting a msfastar object to a table — as_database","text":"x rmfasta data object","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/check_fasta.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the integrity of a msfastar data object — check_fasta","title":"Check the integrity of a msfastar data object — check_fasta","text":"check_fasta() helper function checks structure contents msfastar data object","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/check_fasta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the integrity of a msfastar data object — check_fasta","text":"","code":"check_fasta(x = NULL)"},{"path":"https://jeffsocal.github.io/msfastar/reference/check_fasta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the integrity of a msfastar data object — check_fasta","text":"x rmfasta data object","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/check_fasta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the integrity of a msfastar data object — check_fasta","text":"silent success, abort message fail","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/digest.html","id":null,"dir":"Reference","previous_headings":"","what":"Proteolytic digest a fasta data object — digest","title":"Proteolytic digest a fasta data object — digest","text":"digest() Generates peptide sequences based enzyme partial inputs. works \"list\" output read_fasta() function","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/digest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Proteolytic digest a fasta data object — digest","text":"","code":"digest(   x = NULL,   regex = \".*?[KR]\",   partial = 2,   peptide_length = c(6, 30),   remove_m = FALSE,   mc.cores = 1 )"},{"path":"https://jeffsocal.github.io/msfastar/reference/digest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Proteolytic digest a fasta data object — digest","text":"x rmfasta data object regex regular expression used specify amino acids cleave . .*?[KR] ... trypsin .*?[KR](?!P) ... trypsin P .*?[R](?!P) ... arg-c .*?[K](?!P) ... lys-c .*?[FYWL](?!P) ... chymotrypsin .*?[BD] ... asp-n .*?[D] ... formic acid .*?[FL] ... pepsin-partial number incomplete cleavage sites peptides can retain database peptide_length numeric vector representing minimum maximum sequence lengths. remove_m boolean indicate n-term M variably removed mc.cores number CPU cores engage protein digestion","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/digest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Proteolytic digest a fasta data object — digest","text":"","code":"library(msfastar) proteins <- system.file(\"extdata\", \"albu_human.fasta\", package = \"msfastar\") |> read_fasta() #> ℹ Parsing FASTA file albu_human.fasta #> ✔ Parsing FASTA file albu_human.fasta [94ms] #>   proteins <- digest(proteins, regex = \".*?[K]\", partial = 2) #> ℹ .. digesting proteins #> ✔ .. digesting proteins [10ms] #>"},{"path":"https://jeffsocal.github.io/msfastar/reference/extract.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function to get the string defined by the regex — extract","title":"A helper function to get the string defined by the regex — extract","text":"extract() get current string based regex search","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function to get the string defined by the regex — extract","text":"","code":"extract(string = NULL, regex = NULL)"},{"path":"https://jeffsocal.github.io/msfastar/reference/extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function to get the string defined by the regex — extract","text":"string section text regex list regular expressions defining bits text exract","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/get_peptides.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all peptides from msfastar object as a vector — get_peptides","title":"Get all peptides from msfastar object as a vector — get_peptides","text":"get_peptides() return peptides single string vector","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/get_peptides.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all peptides from msfastar object as a vector — get_peptides","text":"","code":"get_peptides(x = NULL)"},{"path":"https://jeffsocal.github.io/msfastar/reference/get_peptides.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all peptides from msfastar object as a vector — get_peptides","text":"x rmfasta data object","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/make_peptide_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for converting a msfastar object to a table — make_peptide_table","title":"Helper function for converting a msfastar object to a table — make_peptide_table","text":"Helper function converting msfastar object table","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/make_peptide_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for converting a msfastar object to a table — make_peptide_table","text":"","code":"make_peptide_table(x, .drop = NULL)"},{"path":"https://jeffsocal.github.io/msfastar/reference/make_peptide_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for converting a msfastar object to a table — make_peptide_table","text":"x rmfasta data object .drop Call columns drop data.frame","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/make_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for converting a msfastar object to a table — make_table","title":"Helper function for converting a msfastar object to a table — make_table","text":"Helper function converting msfastar object table","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/make_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for converting a msfastar object to a table — make_table","text":"","code":"make_table(x, .drop = NULL)"},{"path":"https://jeffsocal.github.io/msfastar/reference/make_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for converting a msfastar object to a table — make_table","text":"x rmfasta data object .drop Call columns drop data.frame","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/msfastar-package.html","id":null,"dir":"Reference","previous_headings":"","what":"msfastar: A light-weight FASTA reader and parser — msfastar-package","title":"msfastar: A light-weight FASTA reader and parser — msfastar-package","text":"light-weight R package parsing FASTA files R usable formats generating expected peptides given regex.","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/msfastar-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"msfastar: A light-weight FASTA reader and parser — msfastar-package","text":"Maintainer: Jeff Jones jeffj@caltech.edu (ORCID)","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/msfastar.html","id":null,"dir":"Reference","previous_headings":"","what":"FASTA data object — msfastar","title":"FASTA data object — msfastar","text":"FASTA data object","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/msfastar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FASTA data object — msfastar","text":"","code":"msfastar(obj = NULL)"},{"path":"https://jeffsocal.github.io/msfastar/reference/msfastar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FASTA data object — msfastar","text":"obj FASTA data list","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/msfastar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FASTA data object — msfastar","text":"FASTA data object","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/peptides.html","id":null,"dir":"Reference","previous_headings":"","what":"Proteolyticly digest a sequence — peptides","title":"Proteolyticly digest a sequence — peptides","text":"peptides() generates peptide sequences based enzyme partial inputs.","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/peptides.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Proteolyticly digest a sequence — peptides","text":"","code":"peptides(   sequence = NULL,   enzyme = \"[KR]\",   partial = 0:3,   length = c(6, 30),   remove_nterm_m = TRUE )"},{"path":"https://jeffsocal.github.io/msfastar/reference/peptides.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Proteolyticly digest a sequence — peptides","text":"sequence character string amino acids enzyme character string regular expression use proteolytically digest sequence. [KR] ... trypsin [KR](?!P) ... trypsin P [R](?!P) ... arg-c [K](?!P) ... lys-c [FYWL](?!P) ... chymotrypsin [BD] ... asp-n [D] ... formic acid [FL] ... pepsin-partial numeric representing number incomplete enzymatic sites (mis-clevage). length numeric vector representing minimum maximum sequence lengths. remove_nterm_m boolean indicate n-term M variably removed","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/peptides.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Proteolyticly digest a sequence — peptides","text":"","code":"library(msfastar) sequence <- \"SAMERSMALLKPSAMPLERSEQUENCE\" peptides(sequence) #> [1] \"SMALLK\"   \"PSAMPLER\" \"SEQUENCE\"  peptides(sequence, enzyme = \"[L]\", partial = 2, length = c(1,12)) #> [1] \"SAMERSMAL\"  \"L\"          \"KPSAMPL\"    \"ERSEQUENCE\" \"SAMERSMALL\" #> [6] \"LKPSAMPL\""},{"path":"https://jeffsocal.github.io/msfastar/reference/print.msfastar.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function for the print definition of a msfastar object — print.msfastar","title":"A helper function for the print definition of a msfastar object — print.msfastar","text":"helper function print definition msfastar object","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/print.msfastar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function for the print definition of a msfastar object — print.msfastar","text":"","code":"# S3 method for msfastar print(x, ...)"},{"path":"https://jeffsocal.github.io/msfastar/reference/print.msfastar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function for the print definition of a msfastar object — print.msfastar","text":"x rmfasta data object ... Unused legacy","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/print.rmsfasta.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy-Quant data object print definition — print.rmsfasta","title":"Tidy-Quant data object print definition — print.rmsfasta","text":"Tidy-Quant data object print definition","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/print.rmsfasta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy-Quant data object print definition — print.rmsfasta","text":"","code":"# S3 method for msfastar print(x, ...)"},{"path":"https://jeffsocal.github.io/msfastar/reference/print.rmsfasta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy-Quant data object print definition — print.rmsfasta","text":"x msfastar data object ... unused legacy","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/print.rmsfasta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy-Quant data object print definition — print.rmsfasta","text":"print object summary","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/println.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for printing messages — println","title":"Helper function for printing messages — println","text":"Helper function printing messages","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/println.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for printing messages — println","text":"","code":"println(name = \"\", message = \"\", pad_length = 15)"},{"path":"https://jeffsocal.github.io/msfastar/reference/println.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for printing messages — println","text":"name string message string pad_length string","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/println.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for printing messages — println","text":"console print line","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/protease.html","id":null,"dir":"Reference","previous_headings":"","what":"The rust implementat to digest() — protease","title":"The rust implementat to digest() — protease","text":"rust implementat digest()","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/protease.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The rust implementat to digest() — protease","text":"","code":"protease(sequence, regex, partial, lower_pep_len, upper_pep_len, remove_m)"},{"path":"https://jeffsocal.github.io/msfastar/reference/protease.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The rust implementat to digest() — protease","text":"sequence character string amino acids regex character string regular expression use proteolytically digest sequence. .*?[KR] ... trypsin .*?[KR](?!P) ... trypsin P .*?[R](?!P) ... arg-c .*?[K](?!P) ... lys-c .*?[FYWL](?!P) ... chymotrypsin .*?[BD] ... asp-n .*?[D] ... formic acid .*?[FL] ... pepsin-partial numeric representing number incomplete enzymatic sites (mis-clevage). lower_pep_len minimum peptide length allowed upper_pep_len maximum peptide length allowed remove_m boolean indicate n-term M variably removed","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/read_fasta.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the contents of a fasta file — read_fasta","title":"Read the contents of a fasta file — read_fasta","text":"read_fasta() reads fasta file parses meta data protein sequence based patterns regex definition.","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/read_fasta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the contents of a fasta file — read_fasta","text":"","code":"read_fasta(path = NULL, patterns = NULL)"},{"path":"https://jeffsocal.github.io/msfastar/reference/read_fasta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the contents of a fasta file — read_fasta","text":"path character string path fasta formatted file patterns list, provided default regex() used. Note: first element regex list define list reference name, list output, protein can accessed designation. Note: patterns list missing explicit \"sequence\" element, sequence returned. might beneficial meta elements sought.","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/read_fasta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read the contents of a fasta file — read_fasta","text":"","code":"if (FALSE) { library(msfastar) proteins <- system.file(\"extdata\", \"albu_human.fasta\", package = \"msfastar\") |> read_fasta()  # using a custom supplied regex list proteins <- read_fasta(path = \"~/Local/fasta/ecoli_UniProt.fasta\",                   pattern = list(                       \"accession\" = \"sp\\\\|[A-Z]\",                       \"gene_name\" = \"(?<=GN\\\\=).*?(?=\\\\s..\\\\=)\"                   )) }"},{"path":"https://jeffsocal.github.io/msfastar/reference/regex.html","id":null,"dir":"Reference","previous_headings":"","what":"Get/Set the FASTA meta data regex — regex","title":"Get/Set the FASTA meta data regex — regex","text":"regex() gets sets current regex patters assist read_fasta() function. simply provides structure needed read_fasta fasta file, custom list can also supplied. set elements regex() function, simply provide list complementary names -write current list.","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/regex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get/Set the FASTA meta data regex — regex","text":"","code":"regex(params = NULL)"},{"path":"https://jeffsocal.github.io/msfastar/reference/regex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get/Set the FASTA meta data regex — regex","text":"params list meta data extracted fasta file Example:","code":"list(   \"accession\" = \"(?<=|)[A-Z0-9]{5,12}\",   \"protein_name\" = \"(?<=|)[A-Z0-9\\\\_]{8,}(?=\\\\s)\",   \"gene_name\" = \"(?<=GN\\\\=).*?(?=\\\\s..\\\\=)\",   \"organism\" = \"(?<=OS\\\\=).*?(?=\\\\s..\\\\=)\",   \"description\" = \"(?<=\\\\s).*?(?=\\\\s..\\\\=)\",   \"sequence\" = \"[A-Z]\" )"},{"path":"https://jeffsocal.github.io/msfastar/reference/regex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get/Set the FASTA meta data regex — regex","text":"","code":"library(msfastar) regex() #> $accession #> [1] \"(?<=|)[A-Z0-9]{5,12}\" #>  #> $protein_name #> [1] \"(?<=|)[A-Z0-9\\\\_]{8,}(?=\\\\s)\" #>  #> $gene_name #> [1] \"(?<=GN\\\\=).*?(?=\\\\s..\\\\=)\" #>  #> $organism #> [1] \"(?<=OS\\\\=).*?(?=\\\\s..\\\\=)\" #>  #> $description #> [1] \"(?<=\\\\s).*?(?=\\\\s..\\\\=)\" #>  #> $sequence #> [1] \"[A-Z]\" #>   regex(list(\"accession\" = \"sp\\\\|[A-Z]\")) #> $accession #> [1] \"sp\\\\|[A-Z]\" #>  #> $protein_name #> [1] \"(?<=|)[A-Z0-9\\\\_]{8,}(?=\\\\s)\" #>  #> $gene_name #> [1] \"(?<=GN\\\\=).*?(?=\\\\s..\\\\=)\" #>  #> $organism #> [1] \"(?<=OS\\\\=).*?(?=\\\\s..\\\\=)\" #>  #> $description #> [1] \"(?<=\\\\s).*?(?=\\\\s..\\\\=)\" #>  #> $sequence #> [1] \"[A-Z]\" #>"},{"path":"https://jeffsocal.github.io/msfastar/reference/reorder.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a reordered sequence database — reorder","title":"Create a reordered sequence database — reorder","text":"reorder() used reverse shuffle protein sequence target-decoy use.","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/reorder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a reordered sequence database — reorder","text":"","code":"reorder(data, method = c(\"reverse\", \"random\"), tag = \"DECOY\", mc.cores = 1)"},{"path":"https://jeffsocal.github.io/msfastar/reference/reorder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a reordered sequence database — reorder","text":"data data method method tag tag mc.cores number cores","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/rmsfasta.html","id":null,"dir":"Reference","previous_headings":"","what":"FASTA data object — rmsfasta","title":"FASTA data object — rmsfasta","text":"FASTA data object","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/rmsfasta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FASTA data object — rmsfasta","text":"","code":"msfastar(obj)"},{"path":"https://jeffsocal.github.io/msfastar/reference/rmsfasta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FASTA data object — rmsfasta","text":"obj FASTA data list","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/rmsfasta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FASTA data object — rmsfasta","text":"FASTA data object","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/save_fasta.html","id":null,"dir":"Reference","previous_headings":"","what":"The main function for parsing a fasta file — save_fasta","title":"The main function for parsing a fasta file — save_fasta","text":"save_fasta() save file","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/save_fasta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The main function for parsing a fasta file — save_fasta","text":"","code":"save_fasta(fasta = NULL, path = \"test.fasta\")"},{"path":"https://jeffsocal.github.io/msfastar/reference/save_fasta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The main function for parsing a fasta file — save_fasta","text":"fasta_object fasta db object","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/save_fasta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The main function for parsing a fasta file — save_fasta","text":"success TRUE|FAIL","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/sequence_prep.html","id":null,"dir":"Reference","previous_headings":"","what":"Return cleaned seqeuence — sequence_prep","title":"Return cleaned seqeuence — sequence_prep","text":"Return cleaned seqeuence","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/sequence_prep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return cleaned seqeuence — sequence_prep","text":"","code":"sequence_prep(s)"},{"path":"https://jeffsocal.github.io/msfastar/reference/sequence_prep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return cleaned seqeuence — sequence_prep","text":"s character string amino acids","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/subset.msfastar.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a data subset — subset.msfastar","title":"Create a data subset — subset.msfastar","text":"subset() main function sub-setting spectra data ms2spectra data-object based regular expression targeted annotation. function return smaller ms2spectra data-object.","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/subset.msfastar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a data subset — subset.msfastar","text":"","code":"# S3 method for msfastar subset(x = NULL, ..., .verbose = TRUE)"},{"path":"https://jeffsocal.github.io/msfastar/reference/subset.msfastar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a data subset — subset.msfastar","text":"x ms2spectra data object ... three part expression (eg. x == ) .verbose boolean print messages","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/write_fasta.html","id":null,"dir":"Reference","previous_headings":"","what":"Write contents to a fasta file — write_fasta","title":"Write contents to a fasta file — write_fasta","text":"write_fasta() main function writing msfastar data object fasta file. function currently BETA, just print contents stdout.","code":""},{"path":"https://jeffsocal.github.io/msfastar/reference/write_fasta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write contents to a fasta file — write_fasta","text":"","code":"write_fasta(fasta = NULL, path = NULL)"},{"path":"https://jeffsocal.github.io/msfastar/reference/write_fasta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write contents to a fasta file — write_fasta","text":"fasta fasta db object path character string path fasta formatted file","code":""}]
